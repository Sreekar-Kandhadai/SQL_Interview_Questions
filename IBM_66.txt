Calculate the total number of interactions and the total number of contents created for each customer. Include all interaction types and content types in your calculations. 
Your output should include the customer's ID, the total number of interactions, and the total number of content items.

🌀By solving this, you'll learn how to use coalesce, outer join, subquery. Give it a try and share the output! 👇

𝐒𝐜𝐡𝐞𝐦𝐚 𝐚𝐧𝐝 𝐃𝐚𝐭𝐚𝐬𝐞𝐭
CREATE TABLE customer_interactions (customer_id BIGINT, interaction_date DATETIME, interaction_id BIGINT, interaction_type VARCHAR(50));

INSERT INTO customer_interactions (customer_id, interaction_date, interaction_id, interaction_type) VALUES (1, '2023-01-15 10:30:00', 101, 'Click'), (1, '2023-01-16 11:00:00', 102, 'Purchase'),
(2, '2023-01-17 14:45:00', 103, 'View'), (3, '2023-01-18 09:20:00', 104, 'Share'), (3, '2023-01-18 09:25:00', 105, 'Like'), (4, '2023-01-19 12:10:00', 106, 'Comment');

CREATE TABLE user_contents (content_id BIGINT, content_text VARCHAR(255), content_type VARCHAR(50), customer_id BIGINT);

INSERT INTO user_contents (content_id, content_text, content_type, customer_id) VALUES (201, 'Welcome Post', 'Blog', 1), (202, 'Product Review', 'Review', 2), (203, 'Event Photos', 'Photo', 3),
(204, 'Tutorial Video', 'Video', 3), (205, 'Survey Response', 'Survey', 4);

Solution:

with cte as

(select customer_id, count(*) as total_cust_int from Customer_interactions group by customer_id),
  
 cte1 as
 (
 select customer_id,count(*) as tot_contents from User_contents group by customer_id
 )
 
select cte.customer_id,cte.total_cust_int,coalesce(cte1.tot_contents,0)  from cte left join cte1 on cte.customer_id=cte1.customer_id
union
select cte1.customer_id,coalesce(cte.total_cust_int,0),cte1.tot_contents from cte1 left join cte on cte1.customer_id=cte.customer_id
